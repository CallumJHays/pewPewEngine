   1               		.file	"inputs.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.initInputs,"ax",@progbits
  11               	.global	initInputs
  13               	initInputs:
  14               	.LFB0:
  15               		.file 1 "inputs.c"
   1:inputs.c      **** // pewPewEngine/inputs.c
   2:inputs.c      **** #include "cpu_speed.h"
   3:inputs.c      **** #include "inputs.h"
   4:inputs.c      **** 
   5:inputs.c      **** void initInputs(void){
  16               		.loc 1 5 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
   6:inputs.c      **** 	// joystick ports
   7:inputs.c      **** 	DDRD &= ~(1 << 1); // UP - PD1
  22               		.loc 1 7 0
  23 0000 5198      		cbi 0xa,1
   8:inputs.c      **** 	DDRB &= ~(1 << 7); // DOWN - PB7
  24               		.loc 1 8 0
  25 0002 2798      		cbi 0x4,7
   9:inputs.c      **** 	DDRB &= ~(1 << 1); // LEFT - PB1
  26               		.loc 1 9 0
  27 0004 2198      		cbi 0x4,1
  10:inputs.c      **** 	DDRD &= ~(1 << 0); // RIGHT - PD0
  28               		.loc 1 10 0
  29 0006 5098      		cbi 0xa,0
  11:inputs.c      **** 	DDRB &= ~(1 << 0); // CENTER - PB0
  30               		.loc 1 11 0
  31 0008 2098      		cbi 0x4,0
  12:inputs.c      **** 
  13:inputs.c      **** 	// button ports
  14:inputs.c      **** 	DDRF &= ~(1 << 5); // LEFT PF5
  32               		.loc 1 14 0
  33 000a 8598      		cbi 0x10,5
  15:inputs.c      **** 	DDRF &= ~(1 << 6); // RIGHT PF6
  34               		.loc 1 15 0
  35 000c 8698      		cbi 0x10,6
  36 000e 0895      		ret
  37               		.cfi_endproc
  38               	.LFE0:
  40               		.section	.text.getJoystickPosition,"ax",@progbits
  41               	.global	getJoystickPosition
  43               	getJoystickPosition:
  44               	.LFB1:
  16:inputs.c      **** 
  17:inputs.c      **** 	// TODO thumbwheels
  18:inputs.c      **** }
  19:inputs.c      **** 
  20:inputs.c      **** int getJoystickPosition(void){
  45               		.loc 1 20 0
  46               		.cfi_startproc
  47               	/* prologue: function */
  48               	/* frame size = 0 */
  49               	/* stack size = 0 */
  50               	.L__stack_usage = 0
  21:inputs.c      **** 	// if up
  22:inputs.c      **** 	if(PIND >> 1 & 1){
  51               		.loc 1 22 0
  52 0000 4999      		sbic 0x9,1
  53 0002 00C0      		rjmp .L4
  23:inputs.c      **** 		return JOYSTICK_UP;
  24:inputs.c      **** 	}
  25:inputs.c      **** 	// if down
  26:inputs.c      **** 	else if(PINB >> 7 & 1){
  54               		.loc 1 26 0
  55 0004 1F99      		sbic 0x3,7
  56 0006 00C0      		rjmp .L5
  27:inputs.c      **** 		return JOYSTICK_DOWN;
  28:inputs.c      **** 	}
  29:inputs.c      **** 	// if left
  30:inputs.c      **** 	else if(PINB >> 1 & 1){
  57               		.loc 1 30 0
  58 0008 1999      		sbic 0x3,1
  59 000a 00C0      		rjmp .L6
  31:inputs.c      **** 		return JOYSTICK_LEFT;
  32:inputs.c      **** 	}
  33:inputs.c      **** 	// if right
  34:inputs.c      **** 	else if(PIND >> 0 & 1){
  60               		.loc 1 34 0
  61 000c 489B      		sbis 0x9,0
  62 000e 00C0      		rjmp .L7
  35:inputs.c      **** 		return JOYSTICK_RIGHT;
  63               		.loc 1 35 0
  64 0010 83E0      		ldi r24,lo8(3)
  65 0012 90E0      		ldi r25,0
  66 0014 0895      		ret
  67               	.L4:
  23:inputs.c      **** 		return JOYSTICK_UP;
  68               		.loc 1 23 0
  69 0016 80E0      		ldi r24,0
  70 0018 90E0      		ldi r25,0
  71 001a 0895      		ret
  72               	.L5:
  27:inputs.c      **** 		return JOYSTICK_DOWN;
  73               		.loc 1 27 0
  74 001c 81E0      		ldi r24,lo8(1)
  75 001e 90E0      		ldi r25,0
  76 0020 0895      		ret
  77               	.L6:
  31:inputs.c      **** 		return JOYSTICK_LEFT;
  78               		.loc 1 31 0
  79 0022 82E0      		ldi r24,lo8(2)
  80 0024 90E0      		ldi r25,0
  81 0026 0895      		ret
  82               	.L7:
  36:inputs.c      **** 	}
  37:inputs.c      **** 	// must be in neutral
  38:inputs.c      **** 	return JOYSTICK_NEUTRAL;
  83               		.loc 1 38 0
  84 0028 84E0      		ldi r24,lo8(4)
  85 002a 90E0      		ldi r25,0
  39:inputs.c      **** }
  86               		.loc 1 39 0
  87 002c 0895      		ret
  88               		.cfi_endproc
  89               	.LFE1:
  91               		.section	.text.joystickPressed,"ax",@progbits
  92               	.global	joystickPressed
  94               	joystickPressed:
  95               	.LFB2:
  40:inputs.c      **** 
  41:inputs.c      **** int joystickPressed(void){
  96               		.loc 1 41 0
  97               		.cfi_startproc
  98               	/* prologue: function */
  99               	/* frame size = 0 */
 100               	/* stack size = 0 */
 101               	.L__stack_usage = 0
  42:inputs.c      **** 	return PINB >> 0 & 1;
 102               		.loc 1 42 0
 103 0000 83B1      		in r24,0x3
  43:inputs.c      **** }
 104               		.loc 1 43 0
 105 0002 8170      		andi r24,1
 106 0004 90E0      		ldi r25,0
 107 0006 0895      		ret
 108               		.cfi_endproc
 109               	.LFE2:
 111               		.section	.text.leftButtonPressed,"ax",@progbits
 112               	.global	leftButtonPressed
 114               	leftButtonPressed:
 115               	.LFB3:
  44:inputs.c      **** 
  45:inputs.c      **** int leftButtonPressed(void){
 116               		.loc 1 45 0
 117               		.cfi_startproc
 118               	/* prologue: function */
 119               	/* frame size = 0 */
 120               	/* stack size = 0 */
 121               	.L__stack_usage = 0
  46:inputs.c      **** 	return PINF >> 6 & 1;
 122               		.loc 1 46 0
 123 0000 8FB1      		in r24,0xf
  47:inputs.c      **** }
 124               		.loc 1 47 0
 125 0002 86FB      		bst r24,6
 126 0004 8827      		clr r24
 127 0006 80F9      		bld r24,0
 128 0008 90E0      		ldi r25,0
 129 000a 0895      		ret
 130               		.cfi_endproc
 131               	.LFE3:
 133               		.section	.text.rightButtonPressed,"ax",@progbits
 134               	.global	rightButtonPressed
 136               	rightButtonPressed:
 137               	.LFB4:
  48:inputs.c      **** 
  49:inputs.c      **** int rightButtonPressed(void){
 138               		.loc 1 49 0
 139               		.cfi_startproc
 140               	/* prologue: function */
 141               	/* frame size = 0 */
 142               	/* stack size = 0 */
 143               	.L__stack_usage = 0
  50:inputs.c      **** 	return PINF >> 5 & 1;
 144               		.loc 1 50 0
 145 0000 8FB1      		in r24,0xf
  51:inputs.c      **** }
 146               		.loc 1 51 0
 147 0002 85FB      		bst r24,5
 148 0004 8827      		clr r24
 149 0006 80F9      		bld r24,0
 150 0008 90E0      		ldi r25,0
 151 000a 0895      		ret
 152               		.cfi_endproc
 153               	.LFE4:
 155               		.text
 156               	.Letext0:
 157               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 inputs.c
     /tmp/ccNdn8EK.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccNdn8EK.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccNdn8EK.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccNdn8EK.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccNdn8EK.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccNdn8EK.s:13     .text.initInputs:0000000000000000 initInputs
     /tmp/ccNdn8EK.s:43     .text.getJoystickPosition:0000000000000000 getJoystickPosition
     /tmp/ccNdn8EK.s:94     .text.joystickPressed:0000000000000000 joystickPressed
     /tmp/ccNdn8EK.s:114    .text.leftButtonPressed:0000000000000000 leftButtonPressed
     /tmp/ccNdn8EK.s:136    .text.rightButtonPressed:0000000000000000 rightButtonPressed

NO UNDEFINED SYMBOLS
